<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hello boys</title>
    <style>
        form {
            background-color: aqua;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
        .chat-send-box {
            display: flex;
            flex-direction: column;
        }
    </style>
</head>
<body>
    
    <h1>This is my SOKET-IO practice</h1>
    <form >
        <div class="chats">
            <p>hi</p>
            <p>hi</p>
            <p>hi</p>
        </div>
        <div class="chat-send-box">
            <input id="message" name="message" type="text"/>
            <input type="submit" value="submit"/>
        </div>
    </form>
    <script src="https://cdn.socket.io/4.4.1/socket.io.min.js" integrity="sha384-fKnu0iswBIqkjxrhQCTZ7qlLHOFEgNkRmK2vaO/LbTZSXdJfAu6ewRBdwHPhBo/H" crossorigin="anonymous"></script>
    <script>
        const form = document.querySelector('form');
        const chats =document.querySelector('.chats')
        const message = document.querySelector('#message')

        const socket = io('<%= process.env.APP_URL %>');

        // socket.on("new_message",(e)=>{
        //     console.log(JSON.stringify(e))
        // })
        socket.on("new_message", data =>{
            console.log(data)
            
        });
        socket.on('broadcast',(data)=>{
            chats.innerHTML= chats.innerHTML + `<p>${data}</p>`
        })
        
        form.addEventListener('submit',async (e)=>{
            e.preventDefault();
           
            await fetch('/',{
                method : 'POST',
                body :JSON.stringify({'message':message.value}),
                headers: {
                    'Content-Type': 'application/json'
                },
            })
            console.log(JSON.stringify({'message':message.value}));
        })
    </script>
</body>
</html>